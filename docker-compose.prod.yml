version: '3'
services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
     - /dev/null:/var/www/html/index.php

     - ./docker-data/public-files:/var/www/html/files
     - ./docker-data/assets:/var/www/html/assets

     - ./em-breve:/var/www/html/em-breve

     - ./docker-data/nginx:/etc/nginx/conf.d
     - ./docker-data/certbot/conf:/etc/letsencrypt
     - ./docker-data/certbot/www:/var/www/certbot
    ports:
     - "80:80"
     - "443:443"
    depends_on:
      - mapasculturais
    links:
      - mapasculturais

  sessions:
    image: redis:6
    restart: unless-stopped
    command: --maxmemory 384Mb --maxmemory-policy allkeys-lru
    volumes:
      - ./docker-data/sessions:/data

  redis:
    image: redis:6
    restart: unless-stopped
    command: --maxmemory 384Mb --maxmemory-policy allkeys-lru
    
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./docker-data/certbot/conf:/etc/letsencrypt
      - ./docker-data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


  mapasculturais:
    build:
      context: ./
      dockerfile: docker/Dockerfile

    env_file:
      - mapasculturais.prod.env

    restart: unless-stopped

    ports:
      - "9000:9000"
    volumes:
      - ./docker/production/config.d:/var/www/config/config.d

      - ./docker-data/assets:/var/www/html/assets
      - ./docker-data/public-files:/var/www/html/files
      - ./docker-data/private-files:/var/www/var/private-files
      - ./docker-data/logs:/var/www/var/logs

    environment:
      - REDIS_CACHE=redis
      - SESSIONS_SAVE_PATH=tcp://sessions:6379

    depends_on:
      - db
      - redis
      - sessions
    links:
      - db
      - redis
      - sessions
      
  db:
    image: postgis/postgis:14-master
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=mapas
      - POSTGRES_USER=mapas
      - POSTGRES_DB=mapas
      - POSTGRES_DB_TEST=mapasculturais_test
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - ./docker-data/db-data:/var/lib/postgresql/data


  # mailhog: 
  #   image: mailhog/mailhog
  #   ports:
  #     - "8025:8025"
